services: 
  kafka-broker:
    image: confluentinc/cp-server:7.5.0
    hostname: broker
    container_name: broker
    ports:
      - 9092:9092
      - 29093:29093 
    env_file:
      - ./broker.env
    networks:
      - custom-network


  kafka-schema-registry:
    image: confluentinc/cp-schema-registry:7.5.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - kafka-broker
    ports:
      - 8081:8081
    env_file:
      - ./schema.env
    networks:
      - custom-network


  kafka-connect:
    image: bdp-102/kafka-connect
    build:
      context: .
      dockerfile: ./docker/kafka-connect.Dockerfile
    hostname: connect
    container_name: connect
    depends_on:
      - kafka-broker
      - kafka-schema-registry
    ports:
      - 8083:8083
    environment:
      CONNECT_BOOTSTRAP_SERVERS: broker:29092
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_PLUGIN_PATH: /usr/share/java,/usr/share/confluent-hub-components/,/etc/kafka-connect/jars
      AWS_ACCESS_KEY_ID: dp-root-user
      AWS_SECRET_ACCESS_KEY: dp-root-password
    volumes: 
      - ./plugins:/etc/kafka-connect/jars
    networks:
      - custom-network

  rest:
    image: tabulario/iceberg-rest
    container_name: iceberg-rest
    ports:
      - 8181:8181
    environment:
      AWS_ACCESS_KEY_ID: dp-root-user
      AWS_SECRET_ACCESS_KEY: dp-root-password
      AWS_REGION: us-east-1
      CATALOG_WAREHOUSE: s3a://warehouse/test/
      CATALOG_IO__IMPL: org.apache.iceberg.aws.s3.S3FileIO
      CATALOG_S3_ENDPOINT: http://minio:9000
      CATALOG_S3_PATH__STYLE__ACCESS: true
    networks:
      - custom-network

networks:
  custom-network:
    name: custom-network
    external: true

